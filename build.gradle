plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'org.openapi.generator' version "${openapiGeneratorVersion}"
    id 'io.spring.dependency-management' version "${springBootDependencyManagementVersion}"
}

sourceCompatibility = '17'
group = 'pl.mareczek100'
version = '1.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //db
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'

    //api
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenapiVersion"
    implementation "javax.annotation:javax.annotation-api:$javaxAnnotationApiVersion"
    implementation "org.openapitools:jackson-databind-nullable:$jacksonDatabindNullableVersion"
    implementation "com.google.code.findbugs:jsr305:$findBugsJsr305Version"
    implementation "io.swagger:swagger-annotations:$swaggerAnnotationVersion"

    //annotation
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructVersion"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    //test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "org.slf4j:slf4j-api:${wiremockSlf4jVersion}"
    testImplementation "com.github.tomakehurst:wiremock-jre8-standalone:${wiremockVersion}"

}

openApiGenerate {
    generatorName = "java"
    library = "webclient"
    configOptions = [
            serializableModel: "true",
            dateLibrary: "java8",
            serializationLibrary: "jackson"
    ]

    inputSpec = "$rootDir/src/main/resources/contracts/cepik-1.1.3.json".toString()
    outputDir = "$buildDir/generated-sources/cepik".toString()
    apiPackage = "pl.mareczek100.infrastructure.cepik.api"
    modelPackage = "pl.mareczek100.infrastructure.cepik.model"
}

sourceSets {
    main {
        java.srcDirs += "$buildDir/generated-sources/cepik/src/main/java".toString()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport{
    dependsOn test
}

compileJava.options.encoding = 'UTF-8'
compileJava.dependsOn tasks.openApiGenerate